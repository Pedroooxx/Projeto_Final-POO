//Nome: Pedro de Oliveira Machado -  RA: 2417855 - Engenharia da Computação
//JDK-19 - Netbeans 15

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Pedro
 */
public class CadSom extends javax.swing.JFrame {
    
    private CaixaSom c  = new CaixaSom();
    private BDGerCaixa gerCaixa = new BDGerCaixa();
    
    private FoneOuvido f  = new FoneOuvido();
    private BDGerFone gerFone = new BDGerFone();
    
    private AssistenteSom a  = new AssistenteSom();
    private BDGerAssistente gerAssistente = new BDGerAssistente();
    
    private static CadSom cadSomUnico;

    /**
     * Creates new form CadSom
     */
    public CadSom() {
        initComponents();
    }
    
    public static CadSom getCadSom(){
        
        if(cadSomUnico == null){
            cadSomUnico = new CadSom();
        }
        return cadSomUnico;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BGTipo = new javax.swing.ButtonGroup();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLBTitulo = new javax.swing.JLabel();
        jLBTipo = new javax.swing.JLabel();
        jCBCaixa = new javax.swing.JCheckBox();
        jCBFone = new javax.swing.JCheckBox();
        jCBAssistente = new javax.swing.JCheckBox();
        jLBMarca = new javax.swing.JLabel();
        jTFMarca = new javax.swing.JTextField();
        jLBModelo = new javax.swing.JLabel();
        jTFModelo = new javax.swing.JTextField();
        jLBPreco = new javax.swing.JLabel();
        jTFPreco = new javax.swing.JTextField();
        jLBCodigo = new javax.swing.JLabel();
        jTFCodigo = new javax.swing.JTextField();
        jSPOff = new javax.swing.JScrollPane();
        jTAAvisoConsulta = new javax.swing.JTextArea();
        jBTSair = new javax.swing.JButton();
        jBTLimpar = new javax.swing.JButton();
        jBTCadastrar = new javax.swing.JButton();
        jBTConsultar = new javax.swing.JButton();
        jSPAssistente = new javax.swing.JScrollPane();
        jTBAssistente = new javax.swing.JTable();
        jSPCaixa = new javax.swing.JScrollPane();
        jTBCaixa = new javax.swing.JTable();
        jSPFone = new javax.swing.JScrollPane();
        jTBFone = new javax.swing.JTable();
        jLBTabelaCaixa = new javax.swing.JLabel();
        jLBTabelaFone = new javax.swing.JLabel();
        jLBTabelaAssistente = new javax.swing.JLabel();
        jBTEditar = new javax.swing.JButton();
        jSPOff1 = new javax.swing.JScrollPane();
        jTAAvisoExcluir = new javax.swing.JTextArea();
        jSPOff2 = new javax.swing.JScrollPane();
        jTAAvisoEdicao1 = new javax.swing.JTextArea();
        jBTExcluir = new javax.swing.JButton();
        jLBCadastroCaixaSom = new javax.swing.JLabel();
        jLBCadastroFonedeOuvido = new javax.swing.JLabel();
        jLBCadastroAssistenteSom = new javax.swing.JLabel();
        jSPOff3 = new javax.swing.JScrollPane();
        jTAAvisoCadastroCompleto = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTFPeso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFVolume = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTFBateria = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTFSistemaOperacional = new javax.swing.JTextField();
        jLBPresencadeRelogio = new javax.swing.JLabel();
        jTFPresencadeRelogio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTFDisplay = new javax.swing.JTextField();
        jLBPresencadeMicrofone = new javax.swing.JLabel();
        jTFPresencadeMicrofone = new javax.swing.JTextField();
        jLBConexao = new javax.swing.JLabel();
        jTFConexao = new javax.swing.JTextField();
        jLBComprimento = new javax.swing.JLabel();
        jTFComprimento = new javax.swing.JTextField();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Som");

        jLBTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLBTitulo.setText("Cadastro de disposítivos de Som");

        jLBTipo.setText("Selecione o tipo de Dispositivo:");

        BGTipo.add(jCBCaixa);
        jCBCaixa.setText("Caixa de Som");
        jCBCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBCaixaActionPerformed(evt);
            }
        });

        BGTipo.add(jCBFone);
        jCBFone.setText("Fone de Ouvido");
        jCBFone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBFoneActionPerformed(evt);
            }
        });

        BGTipo.add(jCBAssistente);
        jCBAssistente.setText("Assistente de Som");
        jCBAssistente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBAssistenteActionPerformed(evt);
            }
        });

        jLBMarca.setText("Digite a Marca:");

        jTFMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFMarcaActionPerformed(evt);
            }
        });

        jLBModelo.setText("Digite o Modelo:");

        jTFModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFModeloActionPerformed(evt);
            }
        });

        jLBPreco.setText("Digite o Preço:");

        jTFPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFPrecoActionPerformed(evt);
            }
        });

        jLBCodigo.setText("Digite o Codigo:");

        jTFCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCodigoActionPerformed(evt);
            }
        });

        jSPOff.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jSPOff.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTAAvisoConsulta.setColumns(20);
        jTAAvisoConsulta.setRows(5);
        jTAAvisoConsulta.setText("Caso deseje consultar, selecione o tipo de\ndispositivo e digite seu código.");
        jSPOff.setViewportView(jTAAvisoConsulta);

        jBTSair.setText("Sair");
        jBTSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTSairActionPerformed(evt);
            }
        });

        jBTLimpar.setText("Limpar Caixas");
        jBTLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTLimparActionPerformed(evt);
            }
        });

        jBTCadastrar.setText("Cadastrar");
        jBTCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTCadastrarActionPerformed(evt);
            }
        });

        jBTConsultar.setText("Consultar");
        jBTConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTConsultarActionPerformed(evt);
            }
        });

        jTBAssistente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Marca", "Modelo", "Preço", "Código", "OS", "Tem Relógio?", "Display (pol)"
            }
        ));
        jSPAssistente.setViewportView(jTBAssistente);

        jTBCaixa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Marca", "Modelo", "Preço", "Código", "Peso", "Volume", "Bateria em (h)"
            }
        ));
        jSPCaixa.setViewportView(jTBCaixa);

        jTBFone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Marca", "Modelo", "Preco", "Codigo", "Tem Mic?", "Conexão", "Comp. (m)"
            }
        ));
        jSPFone.setViewportView(jTBFone);

        jLBTabelaCaixa.setText("Tabela Caixa de Som");

        jLBTabelaFone.setText("Tabela Fone de Ouvido");

        jLBTabelaAssistente.setText("Tabela Assistente Sonora");

        jBTEditar.setText("Editar");
        jBTEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTEditarActionPerformed(evt);
            }
        });

        jSPOff1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jSPOff1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTAAvisoExcluir.setColumns(20);
        jTAAvisoExcluir.setRows(5);
        jTAAvisoExcluir.setText("Caso deseje excluir, mantenha seu tipo\nselecionado e entre com seu código.");
        jSPOff1.setViewportView(jTAAvisoExcluir);

        jSPOff2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jSPOff2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTAAvisoEdicao1.setColumns(20);
        jTAAvisoEdicao1.setRows(5);
        jTAAvisoEdicao1.setText("Caso deseje editar, edite as informações\nexceto tipo e seu codigo.");
        jSPOff2.setViewportView(jTAAvisoEdicao1);

        jBTExcluir.setText("Excluir");
        jBTExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTExcluirActionPerformed(evt);
            }
        });

        jLBCadastroCaixaSom.setText("Cadastro Caixa Som");

        jLBCadastroFonedeOuvido.setText("Cadastro Fone Ouvido");

        jLBCadastroAssistenteSom.setText("Cadastro Assistente Som");

        jTAAvisoCadastroCompleto.setColumns(20);
        jTAAvisoCadastroCompleto.setRows(5);
        jTAAvisoCadastroCompleto.setText("Responda as Caixas corespondentes ao tipo que utilizar");
        jSPOff3.setViewportView(jTAAvisoCadastroCompleto);

        jLabel1.setText("Digite o Peso:");

        jLabel2.setText("Digite o Volume");

        jLabel3.setText("Digite a Bateria (h):");

        jTFBateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFBateriaActionPerformed(evt);
            }
        });

        jLabel4.setText("Digite o OS:");

        jLBPresencadeRelogio.setText("Digite se há Relógio:");

        jTFPresencadeRelogio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFPresencadeRelogioActionPerformed(evt);
            }
        });

        jLabel6.setText("Digite se há Display:");

        jLBPresencadeMicrofone.setText("Digite se tem Mic:");

        jLBConexao.setText("Digite a Conexão:");

        jLBComprimento.setText("Digite o Comp. (m)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLBTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLBTipo)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jBTConsultar)
                                        .addComponent(jSPOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jSPOff2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jBTEditar))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jBTExcluir)
                                        .addComponent(jSPOff1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jBTLimpar, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jBTSair, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCBFone)
                                        .addComponent(jCBCaixa)
                                        .addComponent(jCBAssistente)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLBMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTFMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLBModelo))
                                            .addComponent(jLBPreco)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTFModelo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTFPreco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLBCodigo)
                                            .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jBTCadastrar))
                                    .addGap(53, 53, 53)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLBTabelaCaixa)
                                                .addComponent(jSPCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jSPAssistente, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLBTabelaAssistente))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jSPOff3)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLBCadastroCaixaSom)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                            .addGap(6, 6, 6)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jTFPeso)
                                                                .addGroup(layout.createSequentialGroup()
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel3)
                                                                        .addComponent(jLabel2)
                                                                        .addComponent(jLabel1)
                                                                        .addComponent(jTFVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jTFBateria, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addGap(0, 0, Short.MAX_VALUE)))))
                                                    .addGap(18, 18, 18)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLBCadastroFonedeOuvido)
                                                        .addComponent(jLBComprimento)
                                                        .addComponent(jLBConexao)
                                                        .addComponent(jLBPresencadeMicrofone)
                                                        .addComponent(jTFComprimento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addComponent(jTFPresencadeMicrofone, javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jTFConexao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGap(18, 18, 18)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel6)
                                                        .addComponent(jLBPresencadeRelogio)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jTFDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addComponent(jTFSistemaOperacional, javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jTFPresencadeRelogio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jLBCadastroAssistenteSom))))
                                            .addGap(36, 36, 36)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLBTabelaFone)
                                                .addComponent(jSPFone, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLBTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLBTabelaCaixa)
                            .addComponent(jLBTabelaAssistente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSPCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jSPAssistente, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLBTabelaFone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSPFone, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jSPOff3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLBCadastroCaixaSom)
                                    .addComponent(jLBCadastroFonedeOuvido)
                                    .addComponent(jLBCadastroAssistenteSom))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTFPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTFVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTFBateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTFSistemaOperacional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLBPresencadeRelogio)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTFPresencadeRelogio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(6, 6, 6)
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTFDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLBPresencadeMicrofone)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFPresencadeMicrofone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLBConexao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFConexao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(jLBComprimento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFComprimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCBCaixa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBFone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBAssistente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLBMarca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLBModelo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLBPreco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLBCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBTCadastrar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jBTSair)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBTLimpar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBTConsultar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSPOff, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBTEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSPOff2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBTExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSPOff1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBCaixaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBCaixaActionPerformed

    private void jTFMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFMarcaActionPerformed

    private void jTFCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCodigoActionPerformed

    private void jTFPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFPrecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFPrecoActionPerformed

    private void jBTSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTSairActionPerformed
        sair();
    }//GEN-LAST:event_jBTSairActionPerformed
    
    public void sair(){
        int r = JOptionPane.showConfirmDialog(null, "Tem certeza?", "Sair", JOptionPane.YES_NO_CANCEL_OPTION);
        if(r == 0){
            this.dispose();
        }
    }
    
    private void jCBFoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBFoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBFoneActionPerformed

    private void jCBAssistenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBAssistenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBAssistenteActionPerformed

    private void jTFModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFModeloActionPerformed

    private void jBTLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTLimparActionPerformed
        
        limpar();
    }//GEN-LAST:event_jBTLimparActionPerformed
    public void limpar(){
        
        jTFMarca.setText("");
        jTFModelo.setText("");
        jTFPreco.setText("");
        jTFCodigo.setText("");
        jTFPeso.setText("");
        jTFVolume.setText("");
        jTFBateria.setText("");
        jTFPresencadeMicrofone.setText("");
        jTFConexao.setText("");
        jTFComprimento.setText("");
        jTFSistemaOperacional.setText("");
        jTFPresencadeRelogio.setText("");
        jTFDisplay.setText("");
        jTFMarca.requestFocus();   
    }
    private void jBTCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTCadastrarActionPerformed
        cadastrarSom();
        if(jCBCaixa.isSelected() == true){
            listarTabCaixa();
        }
        if(jCBFone.isSelected() == true){
            listarTabFone();
        }
        if(jCBAssistente.isSelected() == true){
            listarTabAssistente();
        }
    }//GEN-LAST:event_jBTCadastrarActionPerformed

    private void jBTConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTConsultarActionPerformed
        consultarSom();
    }//GEN-LAST:event_jBTConsultarActionPerformed

    private void jBTEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTEditarActionPerformed
        editar();
        listarTabCaixa();
        listarTabFone();
        listarTabAssistente();
    }//GEN-LAST:event_jBTEditarActionPerformed

    private void jBTExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTExcluirActionPerformed
        excluir();
        listarTabCaixa();
        listarTabFone();
        listarTabAssistente();
    }//GEN-LAST:event_jBTExcluirActionPerformed

    private void jTFBateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFBateriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFBateriaActionPerformed

    private void jTFPresencadeRelogioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFPresencadeRelogioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFPresencadeRelogioActionPerformed
    
    public void excluir(){
        
        if(jCBCaixa.isSelected() == true){
        
            c = new CaixaSom();
            c.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            c = gerCaixa.consCaixaCod(c);
            
            
            if(c != null){
                jTFMarca.setText(c.getMarca());
                jTFModelo.setText(c.getModelo());
                jTFPreco.setText(Float.toString(c.getPreco()));
                jTFCodigo.setText(Integer.toString(c.getCodigo()));
                jTFPeso.setText(Float.toString(c.getPeso()));
                jTFBateria.setText(Float.toString(c.getBateria()));
                jTFVolume.setText(Integer.toString(c.getVolume()));
                
                int x = JOptionPane.showConfirmDialog(null, "Deseja excluir esta Caixa de Som", "Exclusão de Caixa de Som", JOptionPane.YES_NO_CANCEL_OPTION);
                if(x == 0){
                    gerCaixa.deleteCaixaCod(c);
                    JOptionPane.showMessageDialog(null, "Caixa de Som Excluida com sucesso", "Excluir Caixa de Som", 1);
                    limpar();
                }
          
            }
            else{
                JOptionPane.showMessageDialog(null, "Não há Caixa de Som com esse Codigo", "Excluir Caixa de Som", 1);
                limpar();
            }
        }
        if(jCBFone.isSelected() == true){
        
            f = new FoneOuvido();
            f.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            f = gerFone.consFoneCod(f);
            
            
            if(f != null){
                jTFMarca.setText(f.getMarca());
                jTFModelo.setText(f.getModelo());
                jTFPreco.setText(Float.toString(f.getPreco()));
                jTFCodigo.setText(Integer.toString(f.getCodigo()));
                jTFPresencadeMicrofone.setText(f.getPMic());
                jTFConexao.setText(f.getConexao());
                jTFComprimento.setText( Float.toString(f.getComprimento()));
                
                int x = JOptionPane.showConfirmDialog(null, "Deseja excluir este Fone de Ouvido", "Exclusão de Fone de Ouvido", JOptionPane.YES_NO_CANCEL_OPTION);
                if(x == 0){
                    gerFone.deleteFoneCod(f);
                    JOptionPane.showMessageDialog(null, "Fone de Ouvido Excluido com sucesso", "Excluir Fone de Ouvido", 1);
                    limpar();
                }
          
            }
            else{
                JOptionPane.showMessageDialog(null, "Não há Fone de Ouvido com esse Codigo", "Excluir Fone de Ouvido", 1);
                limpar();
            }
        }
        if(jCBAssistente.isSelected() == true){
        
            a = new AssistenteSom();
            a.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            a = gerAssistente.consAssistenteCod(a);
            
            
            if(a != null){
                jTFMarca.setText(a.getMarca());
                jTFModelo.setText(a.getModelo());
                jTFPreco.setText(Float.toString(a.getPreco()));
                jTFCodigo.setText( Integer.toString(a.getCodigo()));
                jTFSistemaOperacional.setText(a.getSistemaOP());
                jTFDisplay.setText(a.getDisplay());
                int x = JOptionPane.showConfirmDialog(null, "Deseja excluir esta Assistente Sonora", "Exclusão de Assistente Sonora", JOptionPane.YES_NO_CANCEL_OPTION);
                if(x == 0){
                    gerAssistente.deleteAssistenteCod(a);
                    JOptionPane.showMessageDialog(null, "Assistente Sonora Excluida com sucesso", "Excluir Assistente Sonora", 1);
                    limpar();
                }
          
            }
            else{
                JOptionPane.showMessageDialog(null, "Não há Caixa de Som com esse Codigo", "Excluir Caixa de Som", 1);
                limpar();
            }
        }
    }
    
    public void editar(){
        
         if(jCBCaixa.isSelected() == true){
        
            c = new CaixaSom();
            c.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            c = gerCaixa.updateCaixaCod(c);

            if(c != null){
                jTFMarca.setText(c.getMarca());
                jTFModelo.setText(c.getModelo());
                jTFPreco.setText(Float.toString(c.getPreco()));
                jTFCodigo.setText(Integer.toString(c.getCodigo()));
                jTFPeso.setText(Float.toString(c.getPeso()));
                jTFBateria.setText(Float.toString(c.getBateria()));
                jTFVolume.setText(Integer.toString(c.getVolume()));
                
                JOptionPane.showMessageDialog(null, "Caixa de Som atualizada com sucesso", "Atualizar Caixa de Som", 1);
                limpar(); 
            }
            else{
                JOptionPane.showMessageDialog(null, "Não há Caixa de Som com este Codigo", "Atualização de Cadastro", 0);
                limpar();
            }
        }
        if(jCBFone.isSelected() == true){
        
            f = new FoneOuvido();
            f.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            f = gerFone.updateFoneCod(f);

            if(f != null){
                jTFMarca.setText(f.getMarca());
                jTFModelo.setText(f.getModelo());
                jTFPreco.setText(Float.toString(f.getPreco()));
                jTFCodigo.setText(Integer.toString(f.getCodigo()));
                jTFPresencadeMicrofone.setText(f.getPMic());
                jTFConexao.setText(f.getConexao());
                jTFComprimento.setText( Float.toString(f.getComprimento()));
                
                JOptionPane.showMessageDialog(null, "Fone de Ouvido atualizado com sucesso", "Atualizar Fone de Ouvido", 1);
                limpar(); 
            }
            else{
                JOptionPane.showMessageDialog(null, "Não há Fone de Ouvido com este Codigo", "Atualização de Cadastro", 0);
                limpar();
            }
        }
        if(jCBAssistente.isSelected() == true){
        
            a = new AssistenteSom();
            a.setCodigo( Integer.parseInt(jTFCodigo.getText()));
            a = gerAssistente.updateAssistenteCod(a);

            if(a != null){
                jTFMarca.setText(a.getMarca());
                jTFModelo.setText(a.getModelo());
                jTFPreco.setText(Float.toString(a.getPreco()));
                jTFCodigo.setText( Integer.toString(a.getCodigo()));
                jTFSistemaOperacional.setText(a.getSistemaOP());
                jTFDisplay.setText(a.getDisplay());
                
                JOptionPane.showMessageDialog(null, "Assistente Sonora atualizado com sucesso", "Atualizar Assistente Sonora", 1);
                limpar(); 
            }
            else{
                JOptionPane.showMessageDialog(null, "Não há Assistente Sonora com este Codigo", "Atualização de Cadastro", 0);
                limpar();
            }
        }
    }
    
    public void listarTabCaixa(){
        
        DefaultTableModel mod = (DefaultTableModel)jTBCaixa.getModel();
        
        int poslin = 0;
        mod.setRowCount(poslin);
        
        for(CaixaSom c : gerCaixa.getBdCaixa()){
            mod.insertRow(poslin, new Object []{c.getMarca(),c.getModelo(),c.getPreco(),c.getCodigo(),c.getPeso(),c.getVolume(),c.getBateria()});
            poslin++;
        }
    }
    
    public void listarTabFone(){
        
        DefaultTableModel mod = (DefaultTableModel)jTBFone.getModel();
        
        int poslin = 0;
        mod.setRowCount(poslin);
        
        for(FoneOuvido f : gerFone.getBdFone()){
            mod.insertRow(poslin, new Object []{f.getMarca(),f.getModelo(),f.getPreco(),f.getCodigo(),f.getPMic(),f.getConexao(),f.getComprimento()});
            poslin++;
        }
    }
    
    public void listarTabAssistente(){
        
        DefaultTableModel mod = (DefaultTableModel)jTBAssistente.getModel();
        
        int poslin = 0;
        mod.setRowCount(poslin);
        
        for(AssistenteSom a : gerAssistente.getBdAssistente()){
            mod.insertRow(poslin, new Object []{a.getMarca(),a.getModelo(),a.getPreco(),a.getCodigo(),a.getSistemaOP(),a.getPRelogio(),a.getDisplay()});
            poslin++;
        }
    }
    
    public void consultarSom(){
        
        if(jCBCaixa.isSelected() == true){
        
            c = new CaixaSom();
            c.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            c = gerCaixa.consCaixaCod(c);

            if(c != null){
                jTFMarca.setText(c.getMarca());
                jTFModelo.setText(c.getModelo());
                jTFPreco.setText(Float.toString(c.getPreco()));
                jTFCodigo.setText(Integer.toString(c.getCodigo()));
                jTFPeso.setText(Float.toString(c.getPeso()));
                jTFBateria.setText(Float.toString(c.getBateria()));
                jTFVolume.setText(Integer.toString(c.getVolume()));
                
                JOptionPane.showMessageDialog(null, "Confirme os dados de Som", "Consulta de Cadastro", 1);
                limpar(); 
            }
            else{
                JOptionPane.showMessageDialog(null, "Não há Caixa de Som com este Codigo", "Consulta de Cadastro", 0);
                limpar();
            }
        }
        if(jCBFone.isSelected() == true){
        
            f = new FoneOuvido();
            f.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            f = gerFone.consFoneCod(f);

            if(f != null){
                jTFMarca.setText(f.getMarca());
                jTFModelo.setText(f.getModelo());
                jTFPreco.setText(Float.toString(f.getPreco()));
                jTFCodigo.setText(Integer.toString(f.getCodigo()));
                jTFPresencadeMicrofone.setText(f.getPMic());
                jTFConexao.setText(f.getConexao());
                jTFComprimento.setText(Float.toString(f.getComprimento()));
                
                JOptionPane.showMessageDialog(null, "Confirme os dados de Som", "Consulta de Cadastro", 1);
                limpar(); 
            }
            else{
                JOptionPane.showMessageDialog(null, "Não há Fone de Ouvido com este Codigo", "Consulta de Cadastro", 0);
                limpar();
            }
        }
        if(jCBAssistente.isSelected() == true){
        
            a = new AssistenteSom();
            a.setCodigo( Integer.parseInt(jTFCodigo.getText()));
            a = gerAssistente.consAssistenteCod(a);

            if(a != null){
                jTFMarca.setText(a.getMarca());
                jTFModelo.setText(a.getModelo());
                jTFPreco.setText(Float.toString(a.getPreco()));
                jTFCodigo.setText( Integer.toString(a.getCodigo()));
                jTFSistemaOperacional.setText(a.getSistemaOP());
                jTFPresencadeRelogio.setText(a.getPRelogio());
                jTFDisplay.setText(a.getDisplay());
                
                JOptionPane.showMessageDialog(null, "Confirme os dados de Som", "Consulta de Cadastro", 1);
                limpar(); 
            }
            else{
                JOptionPane.showMessageDialog(null, "Não há Assistente de Som com este Codigo", "Consulta de Cadastro", 0);
                limpar();
            }
        }
    }
    
    public void cadastrarSom(){
        
        if(jCBCaixa.isSelected() == true){
            
            CaixaSom c = new CaixaSom();
            
            c.setTipo(1);
            
            try{
            c.setMarca(jTFMarca.getText());
            c.setModelo(jTFModelo.getText());
            c.setPreco(Float.parseFloat(jTFPreco.getText()));
            c.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            c.setPeso(Float.parseFloat(jTFPeso.getText()));
            c.setBateria(Float.parseFloat(jTFBateria.getText()));
            c.setVolume(Integer.parseInt(jTFVolume.getText()));
                
            c = gerCaixa.cadCaixa(c);
            }
            catch(NumberFormatException nfe){
                JOptionPane.showMessageDialog(null, "Valor invalido!", "Erro de Codigo", 0);
                jTFCodigo.setText("");
                jTFCodigo.requestFocus();
            }
        
            if(c != null){
                JOptionPane.showMessageDialog(null, "Cadastro concluido com sucesso.", "Cadastro Som", 1);
                limpar();
            }
            else{
                JOptionPane.showMessageDialog(null, "Codigo de Caixa de Som já utilizado.", "Erro de Codigo", 0);
                jTFCodigo.setText("");
                jTFCodigo.requestFocus();
                
            }
        }
        if(jCBFone.isSelected() == true){
            
            FoneOuvido f = new FoneOuvido();
            
            f.setTipo(2);
            try{
            f.setMarca(jTFMarca.getText());
            f.setModelo(jTFModelo.getText());
            f.setPreco(Float.parseFloat(jTFPreco.getText()));
            f.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            f.setPMic(jTFPresencadeMicrofone.getText());
            f.setConexao(jTFConexao.getText());
            f.setComprimento(Float.parseFloat(jTFComprimento.getText()));
            
            f = gerFone.cadFone(f);
            }
            catch(NumberFormatException nfe){
                JOptionPane.showMessageDialog(null, "Valor invalido!", "Erro de Codigo", 0);
                jTFCodigo.setText("");
                jTFCodigo.requestFocus();
            }
        
            if(f != null){
                JOptionPane.showMessageDialog(null, "Cadastro concluido com sucesso.", "Cadastro Som", 1);
                limpar();
            }
            else{
                JOptionPane.showMessageDialog(null, "Codigo de Fone de Ouvido já utilizado.", "Erro de Codigo", 0);
                jTFCodigo.setText("");
                jTFCodigo.requestFocus();
                
            }
        }
        if(jCBAssistente.isSelected() == true){
            
            AssistenteSom a = new AssistenteSom();
            
            a.setTipo(3);
            try{
            a.setMarca(jTFMarca.getText());
            a.setModelo(jTFModelo.getText());
            a.setPreco(Float.parseFloat(jTFPreco.getText()));
            a.setCodigo(Integer.parseInt(jTFCodigo.getText()));
            a.setSistemaOP(jTFSistemaOperacional.getText());
            a.setPRelogio(jTFPresencadeRelogio.getText());
            a.setDisplay(jTFDisplay.getText());

            a = gerAssistente.cadAssistente(a);
            }
            catch(NumberFormatException nfe){
                JOptionPane.showMessageDialog(null, "Valor invalido!", "Erro de Codigo", 0);
                jTFCodigo.setText("");
                jTFCodigo.requestFocus();
            }
        
            if(a != null){
                JOptionPane.showMessageDialog(null, "Cadastro concluido com sucesso.", "Cadastro Som", 1);
                limpar();
            }
            else{
                JOptionPane.showMessageDialog(null, "Codigo de Assistente de Som já utilizado.", "Erro de Codigo", 0);
                jTFCodigo.setText("");
                jTFCodigo.requestFocus();
                
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadSom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadSom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadSom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadSom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadSom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BGTipo;
    private javax.swing.JButton jBTCadastrar;
    private javax.swing.JButton jBTConsultar;
    private javax.swing.JButton jBTEditar;
    private javax.swing.JButton jBTExcluir;
    private javax.swing.JButton jBTLimpar;
    private javax.swing.JButton jBTSair;
    private javax.swing.JCheckBox jCBAssistente;
    private javax.swing.JCheckBox jCBCaixa;
    private javax.swing.JCheckBox jCBFone;
    private javax.swing.JLabel jLBCadastroAssistenteSom;
    private javax.swing.JLabel jLBCadastroCaixaSom;
    private javax.swing.JLabel jLBCadastroFonedeOuvido;
    private javax.swing.JLabel jLBCodigo;
    private javax.swing.JLabel jLBComprimento;
    private javax.swing.JLabel jLBConexao;
    private javax.swing.JLabel jLBMarca;
    private javax.swing.JLabel jLBModelo;
    private javax.swing.JLabel jLBPreco;
    private javax.swing.JLabel jLBPresencadeMicrofone;
    private javax.swing.JLabel jLBPresencadeRelogio;
    private javax.swing.JLabel jLBTabelaAssistente;
    private javax.swing.JLabel jLBTabelaCaixa;
    private javax.swing.JLabel jLBTabelaFone;
    private javax.swing.JLabel jLBTipo;
    private javax.swing.JLabel jLBTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jSPAssistente;
    private javax.swing.JScrollPane jSPCaixa;
    private javax.swing.JScrollPane jSPFone;
    private javax.swing.JScrollPane jSPOff;
    private javax.swing.JScrollPane jSPOff1;
    private javax.swing.JScrollPane jSPOff2;
    private javax.swing.JScrollPane jSPOff3;
    private javax.swing.JTextArea jTAAvisoCadastroCompleto;
    private javax.swing.JTextArea jTAAvisoConsulta;
    private javax.swing.JTextArea jTAAvisoEdicao1;
    private javax.swing.JTextArea jTAAvisoExcluir;
    private javax.swing.JTable jTBAssistente;
    private javax.swing.JTable jTBCaixa;
    private javax.swing.JTable jTBFone;
    private javax.swing.JTextField jTFBateria;
    private javax.swing.JTextField jTFCodigo;
    private javax.swing.JTextField jTFComprimento;
    private javax.swing.JTextField jTFConexao;
    private javax.swing.JTextField jTFDisplay;
    private javax.swing.JTextField jTFMarca;
    private javax.swing.JTextField jTFModelo;
    private javax.swing.JTextField jTFPeso;
    private javax.swing.JTextField jTFPreco;
    private javax.swing.JTextField jTFPresencadeMicrofone;
    private javax.swing.JTextField jTFPresencadeRelogio;
    private javax.swing.JTextField jTFSistemaOperacional;
    private javax.swing.JTextField jTFVolume;
    // End of variables declaration//GEN-END:variables
}
